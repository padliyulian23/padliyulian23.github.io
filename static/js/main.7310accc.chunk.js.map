{"version":3,"sources":["components/layouts/NavComponent.js","components/layouts/NavContainer.js","actions/accountActions.js","actions/types.js","components/comps/bank/AccountComp.js","components/comps/bank/AccountCont.js","components/pages/Home.js","components/comps/bank/AddAccountComp.js","components/comps/bank/AddAccountCont.js","components/pages/Add.js","components/pages/Portfolio.js","components/pages/Blog.js","components/comps/bank/DetailAccountComp.js","components/comps/bank/DatailAccountCont.js","components/comps/bank/EditAccountComp.js","components/comps/bank/EditAccountCont.js","components/pages/Notfound.js","App.js","serviceWorker.js","reducers/accountReducer.js","reducers/index.js","index.js"],"names":["NavComponent","props","links","link","map","react_default","a","createElement","key","id","react_router_dom","to","url","text","moblink","className","icon","href","data-target","NavContainer","state","componentDidMount","document","querySelectorAll","forEach","el","addEventListener","ev","classList","remove","target","parentElement","add","components_layouts_NavComponent","this","Component","getCountrys","dispatch","axios","get","then","res","type","payload","data","AccountComp","accounts","delAccount","account","length","index","name","number","code","address","city","country","currency","onClick","colSpan","AccountCont","getAccounts","_this$props","comps_bank_AccountComp","connect","Home","bank_AccountCont","AddAccountComp","countrys","handleSubmit","handleChange","listCountry","numericCode","value","listCurrency","currencies","onSubmit","onChange","required","htmlFor","disabled","checked","cname","fname","lname","AddAccountCont","e","_this","setState","Object","defineProperty","preventDefault","addAccount","clearState","bank_AddAccountComp","newAccount","Add","bank_AddAccountCont","Portfolio","Blog","DetailAccountComp","handleClick","DetailAccountCont","componentWillMount","detAccount","match","params","history","push","comps_bank_DetailAccountComp","EditAccountComp","defaultValue","EditAccountCont","updateAccount","bank_EditAccountComp","ownProps","find","Notfound","App","layouts_NavContainer","react_router","path","component","exact","detailAccount","editAccount","Boolean","window","location","hostname","initState","combineReducers","arguments","undefined","action","objectSpread","Math","random","concat","toConsumableArray","newAccounts","filter","newData","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7310accc.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./NavComponent.css\"\n\nconst NavComponent = (props) => {\n  const { links } = props\n  const link = links.map(link => {\n    return (\n      <li key={link.id}>\n        <Link to={link.url}>\n          {link.text}\n        </Link>\n      </li>\n    )\n  })\n  const moblink = links.map(link => {\n    return (\n      <li key={link.id}>\n        <Link to={link.url} className=\"sidenav-close\">\n          <i className=\"material-icons\">{link.icon}</i>\n          <span>{link.text}</span>\n        </Link>\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar-fixed\">\n        <nav>\n          <div className=\"container\">\n            <div className=\"nav-wrapper\">\n              <a href=\"#!\" className=\"brand-logo\">App</a>\n              <a href=\"#!\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n              <ul className=\"right hide-on-med-and-down\">\n                {link}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n      <ul className=\"sidenav\" id=\"mobile-demo\">\n        <li><div className=\"user-view\">App</div></li>\n        <li><div className=\"divider\"></div></li>\n        {moblink}\n      </ul>\n    </div>\n  )\n}\n\nexport default NavComponent","import React, { Component } from \"react\"\nimport NavComponent from \"./NavComponent\"\n\nclass NavContainer extends Component {\n  state = {\n    links: [\n      {\n        id: 1, text: \"Home\", url: \"/\", icon: \"home\"\n      },\n      {\n        id: 2, text: \"Add\", url: \"/add\", icon: \"add\"\n      }\n      // {\n      //   id: 3, text: \"Portfolio\", url: \"/portfolio\"\n      // },\n      // {\n      //   id: 4, text: \"Blog\", url: \"/blog\"\n      // }\n    ]\n  }\n\n  componentDidMount = () => {\n    document.querySelectorAll(\".navbar ul li a\").forEach(el => {\n      el.addEventListener(\"click\", (ev) => {\n        document.querySelectorAll(\".navbar ul li\").forEach(el => {\n          el.classList.remove(\"active\")\n        })\n        ev.target.parentElement.classList.add(\"active\")\n      })\n    })\n  }\n\n  render() {\n    return (\n      <NavComponent links={this.state.links} />\n    )\n  }\n} \n\nexport default NavContainer","import { GET_ACCOUNTS, GET_COUNTRYS, ADD_ACCOUNT, DEL_ACCOUNT, DETAIL_ACCOUNT, UPDATE_ACCOUNT } from \"./types\"\nimport axios from \"axios\"\n\nexport const getAccounts = () => dispatch => {\n  dispatch({\n    type: GET_ACCOUNTS\n  })\n}\n\nexport const delAccount = (id) => dispatch => {\n  dispatch({\n    type: DEL_ACCOUNT,\n    payload: id\n  })\n}\n\nexport const detAccount = (id) => dispatch => {\n  dispatch({\n    type: DETAIL_ACCOUNT,\n    payload: id\n  })\n}\n\nexport const addAccount = (newAccount) => dispatch => {\n  dispatch({\n    type: ADD_ACCOUNT,\n    payload: newAccount\n  })\n}\n\nexport const getCountrys = () => dispatch => {\n  axios.get(\"https://restcountries.eu/rest/v2/all\")\n    .then(res => dispatch({\n      type: GET_COUNTRYS,\n      payload: res.data\n    }))\n}\n\nexport const updateAccount = (account) => dispatch => {\n  dispatch({\n    type: UPDATE_ACCOUNT,\n    payload: account\n  })\n}\n\n\n\n","export const GET_ACCOUNTS = \"GET_ACCOUNTS\"\nexport const GET_COUNTRYS = \"GET_COUNTRYS\"\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\"\nexport const DEL_ACCOUNT = \"DEL_ACCOUNT\"\nexport const DETAIL_ACCOUNT = \"DETAIL_ACCOUNT\"\nexport const UPDATE_ACCOUNT = \"UPDATE_ACCOUNT\"\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport \"./AccountComp.css\"\n\nconst AccountComp = (props) => {\n  const { accounts, delAccount } = props\n  const account = accounts.length ? (\n    accounts.map((account, index) => {\n      return (\n        <tr key={account.id}>\n          <td className=\"center-align\">\n            {index + 1}\n          </td>\n          <td>\n            <Link to={\"/account/\" + account.id}>\n              {account.name}\n            </Link>\n          </td>\n          <td>{account.number}</td>\n          <td>{account.code}</td>\n          <td>{account.address}</td>\n          <td>{account.city}</td>\n          <td>{account.country}</td>\n          <td>{account.currency}</td>\n          <td>\n            <Link\n              className=\"btn btn-small waves-effect red lighten-2 left\"\n              to={\"/editAccount/\" + account.id}\n            >\n              edit\n              </Link>\n            <button\n              className=\"btn btn-small waves-effect red lighten-2 right\"\n              onClick={() => delAccount(account.id)}\n            >\n              delete\n              </button>\n          </td>\n        </tr>\n      )\n    })\n  ) : (\n      <tr>\n        <td colSpan=\"9\" className=\"center-align\">\n          No data to view...\n        </td>\n      </tr>\n    )\n  return (\n    <div className=\"tab-con\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"center-align\">No</th>\n            <th>Name</th>\n            <th>Number</th>\n            <th>Code</th>\n            <th>Address</th>\n            <th>City</th>\n            <th>Country</th>\n            <th>Currency</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {account}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default AccountComp\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { getAccounts, delAccount } from \"../../../actions/accountActions\"\nimport AccountComp from \"./AccountComp\"\n\nclass AccountCont extends Component {\n  componentWillMount() {\n    this.props.getAccounts();\n  }\n\n  render() {\n    const { accounts, delAccount } = this.props\n    return (\n      <AccountComp\n        accounts={accounts}\n        delAccount={delAccount}\n      />\n    )\n  }\n}\n\nAccountCont.propTypes = {\n  getAccounts: PropTypes.func.isRequired,\n  delAccount: PropTypes.func.isRequired,\n  accounts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts.accounts\n})\n\nexport default connect(mapStateToProps, { getAccounts, delAccount })(AccountCont)\n","import React, { Component } from 'react';\nimport Accounts from \"../comps/bank/AccountCont\"\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <Accounts />\n          </div>\n        </div>\n      </div>  \n    )\n  }\n}\n\nexport default Home","import React from 'react'\n\nconst AddAccountComp = (props) => {\n  const { data, countrys, handleSubmit, handleChange } = props\n\n  const listCountry = countrys.map(country => {\n    return (\n      <option\n        key={country.numericCode}\n        value={country.name}\n      >\n        {country.name}\n      </option>\n    )\n  })\n\n  const listCurrency = countrys.map(country => {\n    return (\n      <option\n        key={country.numericCode}\n        value={country.currencies[0].code}\n      >\n        {country.currencies[0].code}\n      </option>\n    )\n  })\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          <li className=\"input-field\">\n            <i className=\"material-icons prefix\">person</i>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={data.name}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"name\">Name</label>\n          </li>\n          <li className=\"input-field\">\n            <i className=\"material-icons prefix\">fingerprint</i>\n            <input\n              type=\"text\"\n              id=\"number\"\n              name=\"number\"\n              value={data.number}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"number\">Number</label>\n          </li>\n          <li className=\"input-field\">\n            <i className=\"material-icons prefix\">vpn_key</i>\n            <input\n              type=\"text\"\n              id=\"code\"\n              name=\"code\"\n              value={data.code}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"code\">Code</label>\n          </li>\n          <li className=\"input-field\">\n            <i className=\"material-icons prefix\">location_on</i>\n            <input\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              value={data.address}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"address\">Address</label>\n          </li>\n          <li className=\"input-field\">\n            <i className=\"material-icons prefix\">location_city</i>\n            <input\n              type=\"text\"\n              id=\"city\"\n              name=\"city\"\n              value={data.city}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"city\">City</label>\n          </li>\n          <li>\n            <label htmlFor=\"country\">Country</label>\n            <div className=\"input-field\">\n              <select\n                name=\"country\"\n                id=\"country\"\n                className=\"browser-default\"\n                value={data.country}\n                onChange={handleChange}\n              >\n                <option value=\"\" disabled>--select country--</option>\n                {listCountry}\n              </select>\n            </div>\n          </li>\n          <li>\n            <label htmlFor=\"currency\">Currency</label>\n            <div className=\"input-field\">\n              <select\n                name=\"currency\"\n                id=\"currency\"\n                className=\"browser-default\"\n                value={data.currency}\n                onChange={handleChange}\n              >\n                <option value=\"\" disabled>--select curency--</option>\n                {listCurrency}\n              </select>\n            </div>\n          </li>\n          <li className=\"input-field\">\n            <fieldset>\n            <legend>Account Type</legend>  \n              <p>\n                <label>\n                  <input\n                    className=\"with-gap\"\n                    name=\"type\"\n                    value=\"individual\"\n                    type=\"radio\"\n                    checked={data.type === \"individual\"}\n                    onChange={handleChange}\n                  />\n                  <span>Individual</span>\n                </label>\n              </p>\n              <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  value=\"company\"\n                  type=\"radio\"\n                  checked={data.type === \"company\"}\n                  onChange={handleChange}\n                />\n                <span>Company</span>\n              </label>\n            </p>\n            </fieldset>\n          </li>\n          {\n            data.type === \"\" ? \"\" : (\n              data.type === \"company\" ? (\n                <li className=\"input-field\">\n                  <i className=\"material-icons prefix\">build</i>\n                  <input\n                    type=\"text\"\n                    id=\"cname\"\n                    name=\"cname\"\n                    value={data.cname}\n                    onChange={handleChange}\n                    required\n                  />\n                  <label htmlFor=\"cname\">Company Name</label>\n                </li>\n              ) : (\n                  <li>\n                    <div className=\"row\">\n                      <div className=\"col s6 input-field\">\n                        <i className=\"material-icons prefix\">person</i>\n                        <input\n                          type=\"text\"\n                          id=\"fname\"\n                          name=\"fname\"\n                          value={data.fname}\n                          onChange={handleChange}\n                          required\n                        />\n                        <label htmlFor=\"fname\">Firts Name</label>\n                      </div>\n                      <div className=\"col s6 input-field\">\n                        <i className=\"material-icons prefix\">person</i>\n                        <input\n                          type=\"text\"\n                          id=\"lname\"\n                          name=\"lname\"\n                          value={data.lname}\n                          onChange={handleChange}\n                          required\n                        />\n                        <label htmlFor=\"lname\">Last Name</label>\n                      </div>\n                    </div>\n                  </li>\n                )\n            )\n          }\n          <li>\n            <button\n              className=\"btn waves-effect red lighten-2\"\n            >\n              Add\n            </button>\n          </li>\n        </ul>\n      </form>\n      <div className=\"card-panel\">\n        <h6 className=\"center-align\">Check Your Input Before Add</h6>\n        <p>\n          Account Name : {data.name}\n        </p>\n        <p>\n          Account Number : {data.number}\n        </p>\n        <p>\n          Code : {data.code}\n        </p>\n        <p>\n          Address : {data.address}\n        </p>\n        <p>\n          City : {data.city}\n        </p>\n        <p>\n          Country : {data.country}\n        </p>\n        <p>\n          Currency : {data.currency}\n        </p>\n        <p>\n          Account Type : {data.type}\n        </p>\n        {\n          data.type === \"individual\" ? (\n            <p>Full Name : {data.fname} {data.lname}</p>\n          ):(\n            <p>Company Name : {data.cname}</p>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddAccountComp","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { addAccount, getCountrys } from \"../../../actions/accountActions\"\nimport AddAccountComp from \"./AddAccountComp\"\n\nclass AddAccountCont extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    code: \"\",\n    address: \"\",\n    city: \"\",\n    country: \"\",\n    currency: \"\",\n    type: \"\",\n    cname: \"\",\n    fname: \"\",\n    lname: \"\"\n  }\n\n  componentWillMount() {\n    this.props.getCountrys();\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.addAccount(this.state)\n    this.clearState()\n    // this.props.history.push(\"/\")\n  }\n\n  clearState = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n      code: \"\",\n      address: \"\",\n      city: \"\",\n      country: \"\",\n      currency: \"\",\n      type: \"\",\n      cname: \"\",\n      fname: \"\",\n      lname: \"\"\n    })\n  }\n\n  render() {\n    return (\n      <AddAccountComp\n        data={this.state}\n        countrys={this.props.countrys}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n      />\n    )\n  }\n}\n\nAddAccountCont.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  getCountrys: PropTypes.func.isRequired,\n  countrys: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  countrys: state.accounts.countrys\n})\n\nexport default connect(mapStateToProps, { addAccount, getCountrys })(AddAccountCont)","import React, { Component } from 'react'\nimport AddAccount from \"../comps/bank/AddAccountCont\"\n\nclass Add extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\">\n            <AddAccount />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Add","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <p>Portfolio</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\n\nclass Blog extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <p>Blog</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blog;","import React from 'react';\nimport \"./DetailAccountComp.css\"\n\nconst DetailAccountComp = (props) => {\n  const { account, handleClick } = props\n  return (\n    <div className=\"container bk-count\">\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <span className=\"card-title center-align\">Account Detail</span>\n              <div>\n                <h6>Holder Name</h6>\n                <p>\n                  {account.name}\n                </p>\n              </div>\n              <div>\n                <h6>Account Number</h6>\n                <p>\n                  {account.number}\n                </p>\n              </div>\n              <div>\n                <h6>Swift Code</h6>\n                <p>\n                  {account.code}\n                </p>\n              </div>\n              <div>\n                <h6>Address</h6>\n                <p>\n                  {account.address}\n                </p>\n              </div>\n              <div>\n                <h6>City</h6>\n                <p>\n                  {account.city}\n                </p>\n              </div>\n              <div>\n                <h6>Country</h6>\n                <p>\n                  {account.country}\n                </p>\n              </div>\n              <div>\n                <h6>Currency</h6>\n                <p>\n                  {account.currency}\n                </p>\n              </div>\n              <div>\n                <h6>Type</h6>\n                <p>\n                  {account.type}\n                </p>\n              </div>\n              {account.type === \"company\" ? (\n                <div>\n                  <h6>Company Name</h6>\n                  <p>\n                    {account.cname}\n                  </p>\n                </div>\n              ) : (\n                  <div>\n                    <div>\n                      <h6>First Name</h6>\n                      <p>\n                        {account.fname}\n                      </p>\n                    </div>\n                    <div>\n                      <h6>Last Name</h6>\n                      <p>\n                        {account.lname}\n                      </p>\n                    </div>\n                  </div>\n                )}\n            </div>\n            <div className=\"card-action\">\n              <button\n                className=\"btn btn-small waves-effect red lighten-2\"\n                onClick={handleClick}\n              >\n                Back\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailAccountComp;","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { detAccount } from \"../../../actions/accountActions\"\nimport DetailAccountComp from \"./DetailAccountComp\"\n\nclass DetailAccountCont extends Component {\n\tcomponentWillMount = () => {\n\t\tthis.props.detAccount(this.props.match.params.id);\n\t}\n\n\thandleClick = () => {\n\t\tthis.props.history.push(\"/\")\n\t}\n\n\trender() {\n\t\tconst { account } = this.props\n\t\treturn (\n\t\t\t<DetailAccountComp account={account} handleClick={this.handleClick} />\n\t\t)\n\t}\n}\n\nDetailAccountCont.propTypes = {\n\tdetAccount: PropTypes.func.isRequired,\n\taccount: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\taccount: state.accounts.account\n})\n\nexport default connect(mapStateToProps, { detAccount })(DetailAccountCont);","import React from 'react'\n\nconst EditAccountComp = (props) => {\n  const { data, countrys, handleChange, handleSubmit } = props\n  const listCountry = countrys.map(country => {\n    return (\n      <option key={country.numericCode} value={country.name}>{country.name}</option>\n    )\n  })\n  const listCurrency = countrys.map(country => {\n    return (\n      <option\n        key={country.numericCode}\n        value={country.currencies[0].code}\n      >\n        {country.currencies[0].code}\n      </option>\n    )\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div>\n            <form onSubmit={handleSubmit}>\n              <ul>\n                <li>\n                  <label>Name</label>\n                  <div className=\"input-field\">\n                    <i className=\"material-icons prefix\">person</i>\n                    <input\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      defaultValue={data.name}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </li>\n                <li>\n                  <label>Number</label>\n                  <div className=\"input-field\">\n                    <i className=\"material-icons prefix\">fingerprint</i>\n                    <input\n                      type=\"text\"\n                      id=\"number\"\n                      name=\"number\"\n                      defaultValue={data.number}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </li>\n                <li>\n                  <label>Code</label>\n                  <div className=\"input-field\">\n                    <i className=\"material-icons prefix\">vpn_key</i>\n                    <input\n                      type=\"text\"\n                      id=\"code\"\n                      name=\"code\"\n                      defaultValue={data.code}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </li>\n                <li>\n                  <label>Address</label>\n                  <div className=\"input-field\">\n                    <i className=\"material-icons prefix\">location_on</i>\n                    <input\n                      type=\"text\"\n                      id=\"address\"\n                      name=\"address\"\n                      defaultValue={data.address}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </li>\n                <li>\n                  <label>City</label>\n                  <div className=\"input-field\">\n                    <i className=\"material-icons prefix\">location_city</i>\n                    <input\n                      type=\"text\"\n                      id=\"city\"\n                      name=\"city\"\n                      defaultValue={data.city}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </li>\n                <li>\n                  <label htmlFor=\"country\">Country</label>\n                  <div className=\"input-field\">\n                    <select\n                      name=\"country\"\n                      id=\"country\"\n                      className=\"browser-default\"\n                      value={data.country}\n                      onChange={handleChange}\n                    >\n                      <option value=\"\" disabled>--select country--</option>\n                      {listCountry}\n                    </select>\n                  </div>\n                </li>\n                <li>\n                  <label htmlFor=\"currency\">Currency</label>\n                  <div className=\"input-field\">\n                    <select\n                      name=\"currency\"\n                      id=\"currency\"\n                      className=\"browser-default\"\n                      value={data.currency}\n                      onChange={handleChange}\n                    >\n                      <option value=\"\" disabled>--select currency--</option>\n                      {listCurrency}\n                    </select>\n                  </div>\n                </li>\n                <li className=\"input-field\">\n                  <fieldset>\n                  <legend>Account Type</legend>\n                    <p>\n                      <label>\n                        <input\n                          className=\"with-gap\"\n                          name=\"type\"\n                          value=\"individual\"\n                          type=\"radio\"\n                          checked={data.type === \"individual\"}\n                          onChange={handleChange}\n                        />\n                        <span>Individual</span>\n                      </label>\n                    </p>\n                    <p>\n                    <label>\n                      <input\n                        className=\"with-gap\"\n                        name=\"type\"\n                        value=\"company\"\n                        type=\"radio\"\n                        checked={data.type === \"company\"}\n                        onChange={handleChange}\n                      />\n                      <span>Company</span>\n                    </label>\n                  </p>\n                  </fieldset>\n                </li>\n                {\n                  data.type === \"company\" ? (\n                    <li>\n                      <label>Company Name</label>\n                      <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">build</i>\n                        <input\n                          type=\"text\"\n                          id=\"cname\"\n                          name=\"cname\"\n                          defaultValue={data.cname}\n                          onChange={handleChange}\n                          required\n                        />\n                      </div>\n                    </li>\n                  ) : (\n                      <li>\n                        <div className=\"row\">\n                          <div className=\"col s6 input-field\">\n                            <i className=\"material-icons prefix\">person</i>\n                            <input\n                              type=\"text\"\n                              id=\"fname\"\n                              name=\"fname\"\n                              defaultValue={data.fname}\n                              onChange={handleChange}\n                              required\n                            />\n                          </div>\n                          <div className=\"col s6 input-field\">\n                            <i className=\"material-icons prefix\">person</i>\n                            <input\n                              type=\"text\"\n                              id=\"lname\"\n                              name=\"lname\"\n                              defaultValue={data.lname}\n                              onChange={handleChange}\n                              required\n                            />\n                          </div>\n                        </div>\n                      </li>\n                    )\n                }\n                <li>\n                  <button\n                    className=\"btn waves-effect red lighten-2 right\"\n                  >\n                    Update\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EditAccountComp","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { updateAccount, getCountrys } from \"../../../actions/accountActions\"\nimport EditAccountComp from \"./EditAccountComp\"\n\nclass EditAccountCont extends Component {\n  state = {\n    id: this.props.account.id,\n    name: this.props.account.name,\n    number: this.props.account.number,\n    code: this.props.account.code,\n    address: this.props.account.address,\n    city: this.props.account.city,\n    country: this.props.account.country,\n    currency: this.props.account.currency,\n    type: this.props.account.type,\n    cname: this.props.account.cname,\n    fname: this.props.account.fname,\n    lname: this.props.account.lname\n  } \n\n  clearState = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      number: \"\",\n      code: \"\",\n      address: \"\",\n      city: \"\",\n      country: \"\",\n      currency: \"\",\n      type: \"\",\n      cname: \"\",\n      fname: \"\",\n      lname: \"\"\n    })\n  }\n\n  componentWillMount = () => {\n    this.props.getCountrys()\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (this.state.type === \"individual\") {\n      this.setState({\n        cname: \"\"\n      })\n    } else {\n      this.setState({\n        fname: \"\",\n        lname: \"\"\n      })\n    }\n\n    this.props.updateAccount(this.state)\n    this.clearState()\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    return (\n      <EditAccountComp\n        data={this.state}\n        countrys={this.props.countrys}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n      />\n    )\n  }\n}\n\nEditAccountCont.propTypes = {\n  updateAccount: PropTypes.func.isRequired,\n  getCountrys: PropTypes.func.isRequired,\n  countrys: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  countrys: state.accounts.countrys,\n  account: state.accounts.accounts.find(account => {\n    return account.id == ownProps.match.params.id\n  })\n})\n\nexport default connect(mapStateToProps, { updateAccount, getCountrys })(EditAccountCont)","import React, { Component } from 'react';\n\nclass Notfound extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <p>404, page not found ...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notfound;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Navbar from \"./components/layouts/NavContainer\"\nimport './App.css';\nimport Home from \"./components/pages/Home\"\nimport Add from \"./components/pages/Add\"\nimport Portfolio from \"./components/pages/Portfolio\"\nimport Blog from \"./components/pages/Blog\"\nimport detailAccount from \"./components/comps/bank/DatailAccountCont\"\nimport editAccount from \"./components/comps/bank/EditAccountCont\"\nimport Notfound from \"./components/pages/Notfound\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <main>\n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/add\" component={Add} exact />\n              <Route path=\"/portfolio\" component={Portfolio} exact />\n              <Route path=\"/blog\" component={Blog} exact />\n              <Route path=\"/account/:id\" component={detailAccount} exact />\n              <Route path=\"/editAccount/:id\" component={editAccount} exact />\n              <Route component={Notfound} />\n            </Switch>  \n          </main>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_ACCOUNTS, GET_COUNTRYS, ADD_ACCOUNT, DEL_ACCOUNT, DETAIL_ACCOUNT, UPDATE_ACCOUNT } from \"../actions/types\"\n\nconst initState = {\n  accounts: [\n    {\n      id: 1,\n      name: \"padli yulian\",\n      number: 123,\n      code: 321,\n      address: \"Jl. Mawar No3 Pahoman\",\n      city: \"Bandar Lampung\",\n      country: \"Indonesia\",\n      currency: \"IDR\",\n      type: \"individual\",\n      cname: \"\",\n      fname: \"padli\",\n      lname: \"yulian\"\n    },\n    {\n      id: 2,\n      name: \"iwan saputra\",\n      number: 124,\n      code: 421,\n      address: \"Jl. dahlia 3 No 176\",\n      city: \"Jakarta Pusat\",\n      country: \"Indonesia\",\n      currency: \"IDR\",\n      type: \"company\",\n      cname: \"pt abc\",\n      fname: \"\",\n      lname: \"\"\n    },\n    {\n      id: 3,\n      name: \"rudi agus\",\n      number: 125,\n      code: 521,\n      address: \"Jl. Safira No. 12\",\n      city: \"Bandung\",\n      country: \"Indonesia\",\n      currency: \"IDR\",\n      type: \"individual\",\n      cname: \"\",\n      fname: \"rudi\",\n      lname: \"agus\"\n    },\n    {\n      id: 4,\n      name: \"nanang qosim\",\n      number: 126,\n      code: 621,\n      address: \"Jl. Maju Mundur\",\n      city: \"Pangkalpinang\",\n      country: \"Indonesia\",\n      currency: \"IDR\",\n      type: \"company\",\n      cname: \"pt asindo tech\",\n      fname: \"\",\n      lname: \"\"\n    }\n  ],\n  countrys: [],\n  account: {}\n}\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_ACCOUNTS:\n      return {\n        ...state,\n        // accounts: action.payload\n        accounts: state.accounts\n      }\n    case GET_COUNTRYS:\n      return {\n        ...state,\n        countrys: action.payload\n      }  \n    case ADD_ACCOUNT:\n      action.payload.id = Math.random()\n      return {\n        ...state,\n        accounts: [...state.accounts, action.payload]\n      }\n    case DEL_ACCOUNT:\n      let newAccounts = state.accounts.filter(account => account.id !== action.payload);\n      return {\n        ...state,\n        accounts: newAccounts\n      }\n    case DETAIL_ACCOUNT:\n      let detailAccount = state.accounts.find(account => account.id == action.payload);\n      return {\n        ...state,\n        account: detailAccount\n      }  \n    case UPDATE_ACCOUNT:\n      const newData = state.accounts.filter(account => {\n        if(account.id === action.payload.id) {\n          account.name = action.payload.name\n          account.number = action.payload.number\n          account.code = action.payload.code\n          account.address = action.payload.address\n          account.city = action.payload.city\n          account.country = action.payload.country\n          account.currency = action.payload.currency\n          account.type = action.payload.type\n          account.cname = action.payload.cname\n          account.fname = action.payload.fname\n          account.lname = action.payload.lname\n        }\n        return state\n      })\n      return {\n        ...state,\n        accounts: newData\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\"\nimport accountReducer from \"./accountReducer\"\n\nexport default combineReducers({\n  accounts: accountReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\"\n\nimport { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./reducers\"\n\nconst initState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initState,\n  applyMiddleware(...middleware)\n  // compose(\n  //     applyMiddleware(...middleware),\n  //     window.navigator.userAgent.includes('Chrome') ?\n  //     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : compose,\n  // )\n)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}