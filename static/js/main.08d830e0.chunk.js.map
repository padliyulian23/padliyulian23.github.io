{"version":3,"sources":["components/layouts/Navbar.js","actions/accountActions.js","actions/types.js","components/comps/Accounts.js","components/comps/AddAccount.js","components/pages/Home.js","components/pages/About.js","components/pages/Portfolio.js","components/pages/Blog.js","components/pages/detailAccount.js","components/pages/editAccount.js","components/pages/Notfound.js","App.js","serviceWorker.js","reducers/accountReducer.js","reducers/index.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","links","id","text","url","document","querySelectorAll","forEach","el","addEventListener","ev","classList","remove","target","parentElement","add","link","map","react_default","a","createElement","key","react_router_dom","to","moblink","href","className","data-target","Component","accountList","name","number","code","address","city","country","currency","type","fname","lname","cname","getCountrys","dispatch","axios","get","then","res","payload","data","Accounts","getAccounts","accounts","account","length","index","onClick","delAccount","colSpan","connect","AddAccount","handleChange","e","setState","defineProperty","value","clearState","handleSubmit","preventDefault","addAccount","bind","assertThisInitialized","countrys","listCountry","numericCode","listCurrency","currencies","onSubmit","onChange","required","htmlFor","checked","newAccount","Home","comps_AddAccount","comps_Accounts","About","Portfolio","Blog","detailAccount","detAccount","match","params","history","push","editAccount","updateAccount","defaultValue","ownProps","find","Notfound","App","components_layouts_Navbar","react_router","path","component","exact","Boolean","window","location","hostname","initState","combineReducers","arguments","undefined","action","objectSpread","Math","random","concat","toConsumableArray","newAccounts","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08d830e0.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Navbar.css\"\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      links: [\n        {\n          id: 1, text: \"Home\", url: \"/\"\n        },\n        {\n          id: 2, text: \"About\", url: \"/about\"\n        },\n        {\n          id: 3, text: \"Portfolio\", url: \"/portfolio\"\n        },\n        {\n          id: 4, text: \"Blog\", url: \"/blog\"\n        }\n      ]\n    }\n  }\n\n  componentDidMount() {\n    document.querySelectorAll(\".navbar ul li a\").forEach(el => {\n      el.addEventListener(\"click\", (ev) => {\n        document.querySelectorAll(\".navbar ul li\").forEach(el => {\n          el.classList.remove(\"active\")\n        })\n        ev.target.parentElement.classList.add(\"active\")\n      })\n    })\n  }\n\n  render() {\n    const link = this.state.links.map(link => {\n      return (\n        <li key={link.id}>\n          <Link to={link.url}>{link.text}</Link>\n        </li>\n      )\n    })\n\n    const moblink = this.state.links.map(link => {\n      return (\n        <li key={link.id}>\n          <a href={link.url}>{link.text}</a>\n        </li>\n      )\n    })\n\n    return(\n      <div className=\"navbar\">\n        <div className=\"navbar-fixed\">\n          <nav>\n            <div className=\"container\">\n              <div className=\"nav-wrapper\">\n                <a href=\"#!\" className=\"brand-logo\">App</a>\n                <a href=\"#!\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                <ul className=\"right hide-on-med-and-down\">\n                  {link}\n                </ul>\n              </div>\n            </div>  \n          </nav>\n        </div>  \n\n        <ul className=\"sidenav\" id=\"mobile-demo\">\n          {moblink}\n        </ul>\n      </div>\n    )\n  }\n} \n\nexport default Navbar","import { GET_ACCOUNTS, GET_COUNTRYS, ADD_ACCOUNT, DEL_ACCOUNT, DETAIL_ACCOUNT, UPDATE_ACCOUNT } from \"./types\"\nimport axios from \"axios\"\n\nconst accountList = [\n  {\n    id: 1,\n    name: \"padli yulian\",\n    number: 123,\n    code: 321,\n    address: \"Jl. Mawar No3 Pahoman\",\n    city: \"Bandar Lampung\",\n    country: \"Indonesia\",\n    currency: \"IDR\",\n    type: \"individual\",\n    fname: \"padli\",\n    lname: \"yulian\"\n  },\n  {\n    id: 2,\n    name: \"iwan saputra\",\n    number: 124,\n    code: 421,\n    address: \"Jl. dahlia 3 No 176\",\n    city: \"Jakarta Pusat\",\n    country: \"Indonesia\",\n    currency: \"IDR\",\n    type: \"company\",\n    cname: \"pt abc\"\n  },\n  {\n    id: 3,\n    name: \"rudi agus\",\n    number: 125,\n    code: 521,\n    address: \"Jl. Safira No. 12\",\n    city: \"Bandung\",\n    country: \"Indonesia\",\n    currency: \"IDR\",\n    type: \"individual\",\n    fname: \"rudi\",\n    lname: \"agus\"\n  },\n  {\n    id: 4,\n    name: \"nanang qosim\",\n    number: 126,\n    code: 621,\n    address: \"Jl. Maju Mundur\",\n    city: \"Pangkalpinang\",\n    country: \"Indonesia\",\n    currency: \"IDR\",\n    type: \"company\",\n    cname: \"pt asindo tech\"\n  }\n]\n\nexport const getAccounts = () => dispatch => {\n  dispatch({\n    type: GET_ACCOUNTS,\n    payload: accountList\n  })\n}\n\nexport const delAccount = (id) => dispatch => {\n  dispatch({\n    type: DEL_ACCOUNT,\n    payload: id\n  })\n}\n\nexport const detAccount = (id) => dispatch => {\n  dispatch({\n    type: DETAIL_ACCOUNT,\n    payload: id\n  })\n}\n\nexport const addAccount = (newAccount) => dispatch => {\n  dispatch({\n    type: ADD_ACCOUNT,\n    payload: newAccount\n  })\n}\n\nexport const getCountrys = () => dispatch => {\n  axios.get(\"https://restcountries.eu/rest/v2/all\")\n    .then(res => dispatch({\n      type: GET_COUNTRYS,\n      payload: res.data\n    }))\n}\n\nexport const updateAccount = (account) => dispatch => {\n  dispatch({\n    type: UPDATE_ACCOUNT,\n    payload: account\n  })\n}\n\n// fetch(\"https://jsonplaceholder.typicode.com/posts\")\n//   .then(res => res.json())\n//   .then(posts => dispatch({\n//     type: FETCH_POSTS,\n//     payload: posts\n//   }))\n\n\n\n","export const GET_ACCOUNTS = \"GET_ACCOUNTS\"\nexport const GET_COUNTRYS = \"GET_COUNTRYS\"\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\"\nexport const DEL_ACCOUNT = \"DEL_ACCOUNT\"\nexport const DETAIL_ACCOUNT = \"DETAIL_ACCOUNT\"\nexport const UPDATE_ACCOUNT = \"UPDATE_ACCOUNT\"\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { getAccounts, delAccount } from \"../../actions/accountActions\"\n\nclass Accounts extends Component {\n  componentWillMount() {\n    this.props.getAccounts();\n  }\n\n  render() {\n    const { accounts } = this.props\n    const account = accounts.length ? (\n      accounts.map((account, index) => {\n        return (\n          <tr key={account.id}>\n            <td>{index + 1}</td>\n            <td>\n              <Link to={\"/account/\" + account.id}>\n                {account.name}\n              </Link>\n            </td>\n            <td>{account.number}</td>\n            <td>{account.code}</td>\n            <td>{account.address}</td>\n            <td>{account.city}</td>\n            <td>{account.country}</td>\n            <td>{account.currency}</td>\n            {/* <td>{account.type}</td>\n              <td>{account.cname ? account.cname:\"-\"}</td>\n              <td>{account.fname ? account.fname:\"-\"}</td>\n              <td>{account.lname ? account.lname:\"-\"}</td> */}\n            <td>\n              <Link\n                className=\"btn btn-small waves-effect red lighten-2 left\"\n                to={\"/editAccount/\" + account.id}\n              >\n                edit\n                </Link>\n              <button\n                className=\"btn btn-small waves-effect red lighten-2 right\"\n                onClick={() => this.props.delAccount(account.id)}\n              >\n                delete\n                </button>\n            </td>\n          </tr>\n        )\n      })\n    ) : (\n        <tr>\n          <td colSpan=\"9\" className=\"center-align\">\n            No data to view...\n          </td>\n        </tr>\n      )\n\n    return (\n      <div className=\"tab-con\">\n        <table>\n          <thead>\n            <tr>\n              <th>No</th>\n              <th>Name</th>\n              <th>Number</th>\n              <th>Code</th>\n              <th>Address</th>\n              <th>City</th>\n              <th>Country</th>\n              <th>Currency</th>\n              {/* <th>Type</th>\n              <th>Company</th>\n              <th>First Name</th>\n              <th>Last Name</th> */}\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {account}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n  \n}\n\nAccounts.propTypes = {\n  getAccounts: PropTypes.func.isRequired,\n  delAccount: PropTypes.func.isRequired,\n  accounts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  accounts: state.accounts.accounts\n})\n\nexport default connect(mapStateToProps, { getAccounts, delAccount })(Accounts)\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { addAccount, getCountrys } from \"../../actions/accountActions\"\n\nclass AddAccount extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: \"\",\n      number: \"\",\n      code: \"\",\n      address: \"\",\n      city: \"\",\n      country: \"\",\n      currency: \"\",\n      type: \"\",\n      cname: \"\",\n      fname: \"\",\n      lname: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.clearState = this.clearState.bind(this)\n  }\n\n  componentWillMount() {\n    this.props.getCountrys();\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  clearState = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n      code: \"\",\n      address: \"\",\n      city: \"\",\n      country: \"\",\n      currency: \"\",\n      type: \"\",\n      cname: \"\",\n      fname: \"\",\n      lname: \"\"\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.addAccount(this.state)\n    this.clearState()\n  }\n\n  render() {\n    const { countrys } = this.props\n\n    const listCountry = countrys.map(country => {\n      return (\n        <option key={country.numericCode} value={country.name}>{country.name}</option>\n      )\n    })\n\n    const listCurrency = countrys.map(country => {\n      return (\n        <option key={country.numericCode} value={country.currencies[0].code}>{country.currencies[0].code}</option>\n      )\n    })\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <ul>\n            <li className=\"input-field\">\n              <i className=\"material-icons prefix\">person</i>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required\n              />\n              <label htmlFor=\"name\">Name</label>\n            </li>\n            <li className=\"input-field\">\n              <i className=\"material-icons prefix\">fingerprint</i>\n              <input\n                type=\"text\"\n                id=\"number\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handleChange}\n                required\n              />\n              <label htmlFor=\"number\">Number</label>\n            </li>\n            <li className=\"input-field\">\n              <i className=\"material-icons prefix\">vpn_key</i>\n              <input\n                type=\"text\"\n                id=\"code\"\n                name=\"code\"\n                value={this.state.code}\n                onChange={this.handleChange}\n                required\n              />\n              <label htmlFor=\"code\">Code</label>\n            </li>\n            <li className=\"input-field\">\n              <i className=\"material-icons prefix\">address</i>\n              <input\n                type=\"text\"\n                id=\"address\"\n                name=\"address\"\n                value={this.state.address}\n                onChange={this.handleChange}\n                required\n              />\n              <label htmlFor=\"address\">Address</label>\n            </li>\n            <li className=\"input-field\">\n              <i className=\"material-icons prefix\">person</i>\n              <input\n                type=\"text\"\n                id=\"city\"\n                name=\"city\"\n                value={this.state.city}\n                onChange={this.handleChange}\n                required\n              />\n              <label htmlFor=\"city\">City</label>\n            </li>\n            <li>\n              <label htmlFor=\"country\">Browser Country</label>\n              <div className=\"input-field\">\n                <select\n                  name=\"country\"\n                  id=\"country\"\n                  className=\"browser-default\"\n                  value={this.state.country}\n                  onChange={this.handleChange}\n                >\n                  {listCountry}\n                </select>\n              </div>\n            </li>\n            <li>\n              <label htmlFor=\"currency\">Browser Currency</label>\n              <div className=\"input-field\">\n                <select\n                  name=\"currency\"\n                  id=\"currency\"\n                  className=\"browser-default\"\n                  value={this.state.currency}\n                  onChange={this.handleChange}\n                >\n                  {listCurrency}\n                </select>\n              </div>\n            </li>\n            <li className=\"input-field\">\n              <p>\n                <label>\n                  <input\n                    className=\"with-gap\"\n                    name=\"type\"\n                    value=\"individual\"\n                    type=\"radio\"\n                    checked={this.state.type === \"individual\"}\n                    onChange={this.handleChange}\n                  />\n                  <span>Individual</span>\n                </label>\n              </p>\n              <p>\n                <label>\n                  <input\n                    className=\"with-gap\"\n                    name=\"type\"\n                    value=\"company\"\n                    type=\"radio\"\n                    checked={this.state.type === \"company\"}\n                    onChange={this.handleChange}\n                  />\n                  <span>Company</span>\n                </label>\n              </p>\n            </li>\n            {\n              this.state.type === \"\" ? \"\" : (\n                this.state.type === \"company\" ? (\n                  <li className=\"input-field\">\n                    <i className=\"material-icons prefix\">address</i>\n                    <input\n                      type=\"text\"\n                      id=\"cname\"\n                      name=\"cname\"\n                      value={this.state.cname}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <label htmlFor=\"cname\">Company Name</label>\n                  </li>\n                ) : (\n                    <li>\n                      <div className=\"row\">\n                        <div className=\"col s6 input-field\">\n                          <i className=\"material-icons prefix\">address</i>\n                          <input\n                            type=\"text\"\n                            id=\"fname\"\n                            name=\"fname\"\n                            value={this.state.fname}\n                            onChange={this.handleChange}\n                            required\n                          />\n                          <label htmlFor=\"fname\">Firts Name</label>\n                        </div>  \n                        <div className=\"col s6 input-field\">\n                          <i className=\"material-icons prefix\">address</i>\n                          <input\n                            type=\"text\"\n                            id=\"lname\"\n                            name=\"lname\"\n                            value={this.state.lname}\n                            onChange={this.handleChange}\n                            required\n                          />\n                          <label htmlFor=\"lname\">Last Name</label>\n                        </div>  \n                      </div>  \n                    </li>\n                )\n              )\n            }\n            <li>\n              <button\n                className=\"btn waves-effect red lighten-2 right\"\n              >\n                Add\n              </button>\n            </li>\n          </ul>\n        </form>\n      </div>\n    )\n  }\n}\n\nAddAccount.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  getCountrys: PropTypes.func.isRequired,\n  countrys: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  countrys: state.accounts.countrys\n})\n\nexport default connect(mapStateToProps, { addAccount, getCountrys })(AddAccount)","import React, { Component } from 'react';\nimport Accounts from \"../../components/comps/Accounts\"\nimport AddAccount from \"../../components/comps/AddAccount\"\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h4>Home Page</h4>\n            <AddAccount /><br/><br/>\n            <Accounts />\n          </div>\n        </div>\n      </div>  \n    )\n  }\n}\n\nexport default Home","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h4>About Page</h4>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <p>Portfolio</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\n\nclass Blog extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <p>Blog</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blog;","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\"\nimport \"./detailAccount.css\"\nimport { connect } from \"react-redux\"\nimport { detAccount } from \"../../actions/accountActions\"\n\nclass detailAccount extends Component {\n  componentWillMount() {\n    this.props.detAccount(this.props.match.params.id);\n  }\n\n  render() {\n    const { account } = this.props\n    return (\n      <div className=\"container bk-count\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <span className=\"card-title center-align\">Account Detail</span>\n                <div>\n                  <h6>Holder Name</h6>\n                  <p>\n                    {account.name}\n                  </p>\n                </div>\n                <div>\n                  <h6>Account Number</h6>\n                  <p>\n                    {account.number}\n                  </p>\n                </div>\n                <div>\n                  <h6>Swift Code</h6>\n                  <p>\n                    {account.code}\n                  </p>\n                </div>\n                <div>\n                  <h6>Address</h6>\n                  <p>\n                    {account.address}\n                  </p>\n                </div>\n                <div>\n                  <h6>City</h6>\n                  <p>\n                    {account.city}\n                  </p>\n                </div>\n                <div>\n                  <h6>Country</h6>\n                  <p>\n                    {account.country}\n                  </p>\n                </div>\n                <div>\n                  <h6>Currency</h6>\n                  <p>\n                    {account.currency}\n                  </p>\n                </div>\n                <div>\n                  <h6>Type</h6>\n                  <p>\n                    {account.type}\n                  </p>\n                </div>\n                {account.cname ? (\n                  <div>\n                    <h6>Company Name</h6>\n                    <p>\n                      {account.cname}\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <div>\n                      <h6>First Name</h6>\n                      <p>\n                        {account.fname}\n                      </p>\n                    </div>\n                    <div>\n                      <h6>Last Name</h6>\n                      <p>\n                        {account.lname}\n                      </p>\n                    </div>\n                  </div>  \n                )}\n              </div>\n              <div className=\"card-action\">\n                <button\n                  className=\"btn btn-small waves-effect red lighten-2\"\n                  onClick={() => this.props.history.push(\"/\")}\n                >\n                  Back\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\ndetailAccount.propTypes = {\n  detAccount: PropTypes.func.isRequired,\n  account: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  account: state.accounts.account\n})\n\nexport default connect(mapStateToProps, { detAccount })(detailAccount);","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { updateAccount, getCountrys } from \"../../actions/accountActions\"\n\nclass editAccount extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: this.props.account.id,\n      name: this.props.account.name,\n      number: this.props.account.number,\n      code: this.props.account.code,\n      address: this.props.account.address,\n      city: this.props.account.city,\n      country: this.props.account.country,\n      currency: this.props.account.currency,\n      type: this.props.account.type,\n      cname: this.props.account.cname,\n      fname: this.props.account.fname,\n      lname: this.props.account.lname\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    // this.clearState = this.clearState.bind(this)\n  }\n\n  componentWillMount() {\n    this.props.getCountrys()\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // clearState = () => {\n  //   this.setState({\n  //     name: \"\",\n  //     number: \"\",\n  //     code: \"\",\n  //     address: \"\",\n  //     city: \"\",\n  //     country: \"\",\n  //     currency: \"\",\n  //     type: \"\",\n  //     cname: \"\",\n  //     fname: \"\",\n  //     lname: \"\"\n  //   })\n  // }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.updateAccount(this.state)\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    const { countrys } = this.props\n\n    const listCountry = countrys.map(country => {\n      return (\n        <option key={country.numericCode} value={country.name}>{country.name}</option>\n      )\n    })\n\n    const listCurrency = countrys.map(country => {\n      return (\n        <option key={country.numericCode} value={country.currencies[0].code}>{country.currencies[0].code}</option>\n      )\n    })\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <ul>\n                  <li>\n                    <label>Name</label>\n                    <div className=\"input-field\">\n                      <i className=\"material-icons prefix\">person</i>\n                      <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        defaultValue={this.state.name}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    </div>  \n                  </li>\n                  <li>\n                    <label>Number</label>\n                    <div className=\"input-field\">\n                      <i className=\"material-icons prefix\">fingerprint</i>\n                      <input\n                        type=\"text\"\n                        id=\"number\"\n                        name=\"number\"\n                        defaultValue={this.state.number}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    </div>\n                  </li>\n                  <li>\n                    <label>Code</label>\n                    <div className=\"input-field\">\n                      <i className=\"material-icons prefix\">vpn_key</i>\n                      <input\n                        type=\"text\"\n                        id=\"code\"\n                        name=\"code\"\n                        defaultValue={this.state.code}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    </div>  \n                  </li>\n                  <li>\n                    <label>Address</label>\n                    <div className=\"input-field\">\n                      <i className=\"material-icons prefix\">address</i>\n                      <input\n                        type=\"text\"\n                        id=\"address\"\n                        name=\"address\"\n                        defaultValue={this.state.address}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    </div>  \n                  </li>\n                  <li>\n                    <label>City</label>\n                    <div className=\"input-field\">\n                      <i className=\"material-icons prefix\">person</i>\n                      <input\n                        type=\"text\"\n                        id=\"city\"\n                        name=\"city\"\n                        defaultValue={this.state.city}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    </div>  \n                  </li>\n                  <li>\n                    <label htmlFor=\"country\">Browser Country</label>\n                    <div className=\"input-field\">\n                      <select\n                        name=\"country\"\n                        id=\"country\"\n                        className=\"browser-default\"\n                        value={this.state.country}\n                        onChange={this.handleChange}\n                      >\n                        {listCountry}\n                      </select>\n                    </div>\n                  </li>\n                  <li>\n                    <label htmlFor=\"currency\">Browser Currency</label>\n                    <div className=\"input-field\">\n                      <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        className=\"browser-default\"\n                        value={this.state.currency}\n                        onChange={this.handleChange}\n                      >\n                        {listCurrency}\n                      </select>\n                    </div>\n                  </li>\n                  <li className=\"input-field\">\n                    <p>\n                      <label>\n                        <input\n                          className=\"with-gap\"\n                          name=\"type\"\n                          value=\"individual\"\n                          type=\"radio\"\n                          checked={this.state.type === \"individual\"}\n                          onChange={this.handleChange}\n                        />\n                        <span>Individual</span>\n                      </label>\n                    </p>\n                    <p>\n                      <label>\n                        <input\n                          className=\"with-gap\"\n                          name=\"type\"\n                          value=\"company\"\n                          type=\"radio\"\n                          checked={this.state.type === \"company\"}\n                          onChange={this.handleChange}\n                        />\n                        <span>Company</span>\n                      </label>\n                    </p>\n                  </li>\n                  {\n                    this.state.type === \"company\" ? (\n                        <li>\n                          <label>Company Name</label>\n                          <div className=\"input-field\">\n                            <i className=\"material-icons prefix\">address</i>\n                            <input\n                              type=\"text\"\n                              id=\"cname\"\n                              name=\"cname\"\n                              defaultValue={this.state.cname}\n                              onChange={this.handleChange}\n                              required\n                            />\n                          </div>  \n                        </li>\n                      ) : (\n                          <li>\n                            <div className=\"row\">\n                              <div className=\"col s6 input-field\">\n                                <i className=\"material-icons prefix\">address</i>\n                                <input\n                                  type=\"text\"\n                                  id=\"fname\"\n                                  name=\"fname\"\n                                  defaultValue={this.state.fname}\n                                  onChange={this.handleChange}\n                                  required\n                                />\n                              </div>\n                              <div className=\"col s6 input-field\">\n                                <i className=\"material-icons prefix\">address</i>\n                                <input\n                                  type=\"text\"\n                                  id=\"lname\"\n                                  name=\"lname\"\n                                  defaultValue={this.state.lname}\n                                  onChange={this.handleChange}\n                                  required\n                                />\n                              </div>\n                            </div>\n                          </li>\n                        )\n                  }\n                  <li>\n                    <button\n                      className=\"btn waves-effect red lighten-2 right\"\n                    >\n                      Update\n                    </button>\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\neditAccount.propTypes = {\n  updateAccount: PropTypes.func.isRequired,\n  getCountrys: PropTypes.func.isRequired,\n  countrys: PropTypes.array.isRequired\n}\n\n// const mapStateToProps = (state, ownProps) => {\n//   const id = ownProps.match.params.id;\n//   return {\n//     account: state.accounts.accounts.find(account => {\n//       return {\n//         account.id === id\n//       }\n//     })\n//   }\n// }  \n\nconst mapStateToProps = (state, ownProps) => ({\n  countrys: state.accounts.countrys,\n  account: state.accounts.accounts.find(account => {\n    return account.id == ownProps.match.params.id\n  })\n})\n\nexport default connect(mapStateToProps, { updateAccount, getCountrys })(editAccount)","import React, { Component } from 'react';\n\nclass Notfound extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <p>404, page not found ...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notfound;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Navbar from \"./components/layouts/Navbar\"\nimport './App.css';\nimport Home from \"./components/pages/Home\"\nimport About from \"./components/pages/About\"\nimport Portfolio from \"./components/pages/Portfolio\"\nimport Blog from \"./components/pages/Blog\"\nimport detailAccount from \"./components/pages/detailAccount\"\nimport editAccount from \"./components/pages/editAccount\"\nimport Notfound from \"./components/pages/Notfound\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <main>\n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/about\" component={About} exact />\n              <Route path=\"/portfolio\" component={Portfolio} exact />\n              <Route path=\"/blog\" component={Blog} exact />\n              <Route path=\"/account/:id\" component={detailAccount} exact />\n              <Route path=\"/editAccount/:id\" component={editAccount} exact />\n              <Route component={Notfound} />\n            </Switch>  \n          </main>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_ACCOUNTS, GET_COUNTRYS, ADD_ACCOUNT, DEL_ACCOUNT, DETAIL_ACCOUNT, UPDATE_ACCOUNT } from \"../actions/types\"\n\nconst initState = {\n  accounts: [],\n  countrys: [],\n  account: {}\n}\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_ACCOUNTS:\n      return {\n        ...state,\n        accounts: action.payload\n      }\n    case GET_COUNTRYS:\n      return {\n        ...state,\n        countrys: action.payload\n      }  \n    case ADD_ACCOUNT:\n      action.payload.id = Math.random()\n      return {\n        ...state,\n        accounts: [...state.accounts, action.payload]\n      }\n    case DEL_ACCOUNT:\n      let newAccounts = state.accounts.filter(account => account.id !== action.payload);\n      return {\n        ...state,\n        accounts: newAccounts\n      }\n    case DETAIL_ACCOUNT:\n      let detailAccount = state.accounts.find(account => account.id == action.payload);\n      return {\n        ...state,\n        account: detailAccount\n      }  \n    case UPDATE_ACCOUNT:\n      state.accounts.filter(account => {\n        if(account.id === action.payload.id) {\n          account.name = action.payload.name\n          account.number = action.payload.number\n          account.code = action.payload.code\n          account.address = action.payload.address\n          account.city = action.payload.city\n          account.country = action.payload.country\n          account.currency = action.payload.currency\n          account.type = action.payload.type\n          account.cname = action.payload.cname\n          account.fname = action.payload.fname\n          account.lname = action.payload.lname\n        }\n      })\n      return state       \n    default:\n      return state\n  }\n}\n\n// state.students.filter(student => {\n//   if (student.id === action.student.id) {\n//     student.npm = action.student.npm\n//     student.name = action.student.name\n//   }\n// })\n\n// state.accounts.filter(account => {\n//   if(account.id === payload.id) {\n//     account.name = payload.name\n//     account.number = payload.number\n//     account.code = payload.code\n//     account.address = payload.address\n//     account.city = payload.city\n//     account.country = payload.country\n//     account.currency = payload.currency\n//     account.type = payload.type\n//     account.cname = payload.cname\n//     account.fname = payload.fname\n//     account.lname = payload.lname\n//   }\n// })","import { combineReducers } from \"redux\"\nimport accountReducer from \"./accountReducer\"\n\nexport default combineReducers({\n  accounts: accountReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\"\n\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./reducers\"\n\nconst initState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initState,\n  compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}